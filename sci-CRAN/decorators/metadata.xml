<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<longdescription>
		Extend the Behaviour of a Function without Explicitly Modifying
		it // A decorator is a function that receives a function,
		extends its behaviour, and returned the altered function. Any
		caller that uses the decorated function uses the same interface
		as it were the original, undecorated function. Decorators serve
		two primary uses: (1) Enhancing the response of a function as
		it sends data to a second component; (2) Supporting multiple
		optional behaviours. An example of the first use is a timer
		decorator that runs a function, outputs its execution time on
		the console, and returns the original function's result. An
		example of the second use is input type validation decorator
		that during running time tests whether the caller has passed
		input arguments of a particular class.  Decorators can reduce
		execution time, say by memoization, or reduce bugs by adding
		defensive programming routines.
	</longdescription>
</pkgmetadata>
